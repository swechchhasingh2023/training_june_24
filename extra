any text editor -VS code, sublime 
> https://code.visualstudio.com/ (install)
> https://nodejs.org/en (install)
> https://github.com/ (create account)
> gitbash: https://git-scm.com/downloads

> Extensions
* Vs code icon
* git history
* gitlens
* spell check
* live server

Assignment
class performance
Final interview

Profile site
design for second project (frontend homepage)

https://imgbb.com/

html > Structure
css > look and feel
bootstrap > responsive (website work perfectly on every screen design)
javascript > Events & Logics

nodejs + express javascript
Mongodb
react
python

/* javascript > Events & Logics
1- clicking on any button something should happen
2- if we are writing wrong email id that give wrong email id
suppose we are writing 11 digits mobile no it say maximum digits allowed 10 digits - call validations
3- if you are clicking on the buttons pop up will appear.- Logics
4- where ever user interaction will happen or any logic will come in the picture basically we require js.
js is basic for the next sub */

html 
>wrapper
head
> all the linking like css or javascript 
& title
body
> all content that is visible to us

HTML
// there are two types of tag
inline
>start in same line
> only take width required as per the content
>span, a, img

block
> start form the new line
> always take the width of screen
> p, div, h1

self closing tag
>hr - horizontal row
>br - we can use this tag for break the line but it is not recommended bcz when we will go for responsiveness br tag is not a good option

img (attribute and property)
> attribute or property of the tag - src
> always keep the image in the single folder images and files

Recommended don't use direct url image from google save image after that use. might that url get in the future

jpeg, png, gif use this || bcz this formats supported by all the browsers.
even incase of broken or incorrect image alt will display
title is tooltip when you hover on the image

semantic tag

codes run on the browsers and it has been modern it will work without html and head tags

Semantic tags:- the tag which give structure like not all but header and footer tag come under semantic tag

Html 5- introduce new tags

ifelse
function
dom
calc
darklight mode
coupon
string operation
rest spread
object
//////////////
setInterval & setTimeout
array
math operation
loop
map filter
object
geo location + api
clouser
hoisting
storage

https://api.openweathermap.org/data/2.5/forecast/daily?q=london&mode=json&units=metric&cnt=5&appid=fbf712a5a83d7305c3cda4ca8fe7ef29

// Nodejs
Nodejs -
Single threaded - every request is coming in a single thread
Asynchronous
Non-blocking I/O (input/output)

whatever we req that will get assigned to one thead. 


Each request get assigned to one-one event.
whenever the request got completed you will get the response that response come into the form of callback.

Why its faster -
bcz multiple request get processed parallelly.


REST API - 
Representational State Transfer Application Programming Interface

what is the benefit of rest API
sMajor features-
It is called state less- every req will be considered as a new request.

C > Create (POST)
R > Read (GET)
U > Update (PUT)
D > Delete  (DELETE)

Operation in the API

Method in the API  POST, GET, PUT, DELETE

NPM
> Node Package Manager
package or supporting library
> it is the place where all the backend API will available


package.json
> entry point to the app
> It contain meta data (name, version, description)
> scripts (start, test)
> packages (dependency management)

// step to generate package.json
> open terminal go inside the folder
> type npm init
> answer all questions
> type 'yes'

// step to install package

> open terminal and go inside the folder
> npm i packagename

package-lock.json
> dependency tree

npm i cors
npm i express

How to create package.json npm init ELSE npm init -y
stop the server - control + C

when you are getting the code you need to install npm 
npm i  // it will go the directory in package.json and install require file

// for static API - http://localhost:9877/

live api (anyone can access)- http://3.17.216.66:4000/location

http://localhost:8766/

http://localhost:8765/

nodemon
> to start and stop the server automatically
whatever package we are installed that are local dependency..
this package can be used only inside of the folder..

Global dependency- they will directly install in the laptop, they can be used for any applications.
- this package used before start the application

Way to install both are deference-


> nodemon
//global
> require administrative permissions
> this package used before start the application
# window
> open cmd as admin
> npm i -g packagename
# mac/linux
> open terminal
> sudo npm i -g packagename
sudo npm i -g nodemon



Final project will one ecom website of your chocie
Min Req
> Application must have min 4 pages
a) HomePage
b) Listing Page
c) Place order page
d) See order page

> Need to Design UI (can be different from real app)
and try to make responsive as much as you can
> You need to create rest api for all pages
> Min 5 category and each must have 5 records
> Adding login functionality will be plus
> Frontend should be in react with backend node/python
and database should be mongodb

>cors
cross origin resource sharing 
allow to use the backend from the frontend
it is middleware just like supporting library


Cluster means one space -  where is this cloud exactly hosted

param
> what we pass after /
> we need to define param in route code
> use to pass few values  

queryParam
> what we pass after ?
> No need to define
> use to multiple value

Swagger installation

npm i swagger-jsdoc swagger-ui-express

/// step to generate react app
> open cmd  as admin
> npm i -g create-react-app

//Every time you new new app
> open cmd
> go inside the folder where you want app
> create-react-app appname

example 
create folder with the name of react
create-react-app firstapp

React:-

SPA> Single Page Application

Component based 
Hooks
State & Props
Calling api
Routing
Param & queryParam

react- main package
react-dom - which help to display the content
react-scripts - which help to run the content

state:- 
> Act a local variable
> every component can have its own state and we can update
> when state update component will re-render

Props:-
> are the way by which we can transfer state from one component to another componentin case of nasted component.

(get) cityname >           http://3.17.216.66:4000/location
(get) restwrtcity >        http://3.17.216.66:4000/restaurant?stateId=1
(get) quickSearch>         http://3.17.216.66:4000/quicksearch

(get) onbasisofMeal >      http://3.17.216.66:4000/restaurant?mealtype_id=
(get) cuisinefilter >      http://3.17.216.66:4000/filter/4?cuisine=1
(get) costfilter >         http://3.17.216.66:4000/filter/1?hcost=1000&lcost=500

(get) restdetails >        http://3.17.216.66:4000/details/1
(get) menu >               http://3.17.216.66:4000/menu/1

(post) orderspage >        http://3.17.216.66:4000/menuItem
                           body [1,4,5]
(post)placeOrder >        

(get) allorder>            
       
(get) restaurants>         http://3.17.216.66:4000/restaurants

params
querParams